!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ADDRESS_FORMAT	src/socket.c	14;"	d	file:
CALC_STATUS_FAILURE	include/systems/calc.h	/^    CALC_STATUS_FAILURE,$/;"	e	enum:calc_status_enum
CALC_STATUS_SUCCESS	include/systems/calc.h	/^    CALC_STATUS_SUCCESS$/;"	e	enum:calc_status_enum
CHEMDB_COUNT	src/systems/chem.c	/^const chemdb_id CHEMDB_COUNT = 5;$/;"	v
CLIENT_COUNT	include/socket.h	5;"	d
COMMAND_STATUS_FAILURE	include/command/struct.h	/^    COMMAND_STATUS_FAILURE = -1,$/;"	e	enum:command_status_enum
COMMAND_STATUS_INVALID_USAGE	include/command/struct.h	/^    COMMAND_STATUS_INVALID_USAGE = -2,$/;"	e	enum:command_status_enum
COMMAND_STATUS_NONE	include/command/struct.h	/^    COMMAND_STATUS_NONE = 0,$/;"	e	enum:command_status_enum
COMMAND_STATUS_SUCCESS	include/command/struct.h	/^    COMMAND_STATUS_SUCCESS = 1$/;"	e	enum:command_status_enum
ELEMENT_COUNT	src/systems/chem.c	/^const element_id ELEMENT_COUNT = 119;$/;"	v
FLAGS	Makefile	/^FLAGS=-Wall -I.$/;"	m
INCLUDES	Makefile	/^INCLUDES=$(shell find $(INCLUDE_DIR) -name "*.h")$/;"	m
INCLUDE_DIR	Makefile	/^INCLUDE_DIR=include$/;"	m
LISTENER_PORT	src/socket.c	17;"	d	file:
LISTEN_QUEUE	src/socket.c	18;"	d	file:
NaN	include/util.h	3;"	d
POLL_COUNT	src/socket.c	13;"	d	file:
SRCS	Makefile	/^SRCS=$(shell find $(SRC_DIR) -name "*.c")$/;"	m
SRC_DIR	Makefile	/^SRC_DIR=src$/;"	m
STORAGE_BUFFER_LENGTH	src/socket.c	15;"	d	file:
STREAM_STATUS_EOF	include/csstream.h	/^    STREAM_STATUS_EOF = -1,$/;"	e	enum:stream_status_enum
STREAM_STATUS_PARSE_ERROR	include/csstream.h	/^    STREAM_STATUS_PARSE_ERROR = -2,$/;"	e	enum:stream_status_enum
STREAM_STATUS_SUCCESS	include/csstream.h	/^    STREAM_STATUS_SUCCESS = 1,$/;"	e	enum:stream_status_enum
TARGET	Makefile	/^TARGET=out$/;"	m
USERNAME_LENGTH	src/socket.c	16;"	d	file:
WHACK	include/util.h	1;"	d
address_length	src/socket.c	/^socklen_t address_length = sizeof(struct sockaddr_in);$/;"	v
boiling_point	src/systems/chem.c	/^    double boiling_point;$/;"	m	struct:element_struct2	file:
calc_status	include/typedefs.h	/^typedef enum calc_status_enum calc_status;$/;"	t	typeref:enum:calc_status_enum
calc_status_enum	include/systems/calc.h	/^enum calc_status_enum {$/;"	g
calc_value	include/systems/calc.h	/^typedef float calc_value;$/;"	t
calc_value	src/systems/calc.c	/^typedef float calc_value; \/\/ can be a struct later$/;"	t	file:
chemdb	include/typedefs.h	/^typedef struct chemdb_struct chemdb;$/;"	t	typeref:struct:chemdb_struct
chemdb_count	src/systems/chem.c	/^chemdb_id chemdb_count() {$/;"	f
chemdb_description	src/systems/chem.c	/^char * chemdb_description(chemdb_id chemdb) {$/;"	f
chemdb_good	src/systems/chem.c	/^int chemdb_good(client_index client, chemdb_id chemdb) {$/;"	f
chemdb_id	include/typedefs.h	/^typedef unsigned chemdb_id;$/;"	t
chemdb_name	src/systems/chem.c	/^char * chemdb_name(chemdb_id chemdb) {$/;"	f
chemdb_struct	src/systems/chem.c	/^struct chemdb_struct {$/;"	s	file:
chemdbs	src/systems/chem.c	/^chemdb chemdbs[] = {$/;"	v
client_addrs	src/socket.c	/^struct sockaddr_in * const client_addrs = poll_addrs + 1;$/;"	v
client_buffers	src/socket.c	/^struct storage_buffer client_buffers[CLIENT_COUNT];$/;"	v	typeref:struct:storage_buffer
client_chemdbs	src/socket.c	/^chemdb_id client_chemdbs[CLIENT_COUNT];$/;"	v
client_fds	src/socket.c	/^struct pollfd * const client_fds = poll_fds + 1;$/;"	v
client_ids	src/socket.c	/^client_index client_ids[CLIENT_COUNT];$/;"	v
client_index	include/typedefs.h	/^typedef unsigned client_index;$/;"	t
command	include/typedefs.h	/^typedef struct command_struct command;$/;"	t	typeref:struct:command_struct
command_calc	include/command/struct.h	/^const command command_calc;$/;"	v
command_calc	src/command/calc.c	/^const command command_calc = {$/;"	v
command_calc_exec	src/command/calc.c	/^const command command_calc_exec = {$/;"	v
command_calc_help	src/command/calc.c	/^const command command_calc_help = {$/;"	v
command_chem	include/command/struct.h	/^const command command_chem;$/;"	v
command_chem	src/command/chem.c	/^const command command_chem = {$/;"	v
command_chem_econfig	src/command/chem.c	/^const command command_chem_econfig = {$/;"	v
command_chem_econfig_of	src/command/chem.c	/^const command command_chem_econfig_of = {$/;"	v
command_chem_econfig_order	src/command/chem.c	/^const command command_chem_econfig_order = {$/;"	v
command_chem_element	src/command/chem.c	/^const command command_chem_element = {$/;"	v
command_chem_element_boilingpoint	src/command/chem.c	/^const command command_chem_element_boilingpoint = {$/;"	v
command_chem_element_database	src/command/chem.c	/^const command command_chem_element_database = {$/;"	v
command_chem_element_database_list	src/command/chem.c	/^const command command_chem_element_database_list = {$/;"	v
command_chem_element_database_select	src/command/chem.c	/^const command command_chem_element_database_select = {$/;"	v
command_chem_element_database_selected	src/command/chem.c	/^const command command_chem_element_database_selected = {$/;"	v
command_chem_element_electronaffinity	src/command/chem.c	/^const command command_chem_element_electronaffinity = {$/;"	v
command_chem_element_electronegativity	src/command/chem.c	/^const command command_chem_element_electronegativity = {$/;"	v
command_chem_element_ionizationenergy	src/command/chem.c	/^const command command_chem_element_ionizationenergy = {$/;"	v
command_chem_element_list	src/command/chem.c	/^const command command_chem_element_list = {$/;"	v
command_chem_element_meltingpoint	src/command/chem.c	/^const command command_chem_element_meltingpoint = {$/;"	v
command_chem_element_molarmass	src/command/chem.c	/^const command command_chem_element_molarmass = {$/;"	v
command_chem_element_name	src/command/chem.c	/^const command command_chem_element_name = {$/;"	v
command_chem_element_number	src/command/chem.c	/^const command command_chem_element_number = {$/;"	v
command_chem_element_statistics	src/command/chem.c	/^const command command_chem_element_statistics = {$/;"	v
command_chem_element_symbol	src/command/chem.c	/^const command command_chem_element_symbol = {$/;"	v
command_eval	src/command/struct.c	/^int command_eval(client_index client, const command * cmd, string_stream * ss) {$/;"	f
command_help	src/command/main.c	/^const command command_help = {$/;"	v
command_invalid	src/command/struct.c	/^int command_invalid(client_index client) {$/;"	f
command_root	include/command/struct.h	/^const command command_root;$/;"	v
command_root	src/command/main.c	/^const command command_root = {$/;"	v
command_start	src/command/struct.c	/^int command_start(client_index client, string_stream * ss) {$/;"	f
command_status	include/typedefs.h	/^typedef enum command_status_enum command_status;$/;"	t	typeref:enum:command_status_enum
command_status_enum	include/command/struct.h	/^enum command_status_enum {$/;"	g
command_struct	include/command/struct.h	/^struct command_struct {$/;"	s
data	src/socket.c	/^    char data[STORAGE_BUFFER_LENGTH];$/;"	m	struct:storage_buffer	file:
data	src/systems/chem.c	/^    element_data2 * data;$/;"	m	struct:chemdb_struct	file:
description	src/systems/chem.c	/^    char * description;$/;"	m	struct:chemdb_struct	file:
electron_affinity	src/systems/chem.c	/^    double electron_affinity;$/;"	m	struct:element_struct2	file:
electronegativity	src/systems/chem.c	/^    double electronegativity;$/;"	m	struct:element_struct2	file:
element	src/systems/chem.c	/^    element_id element;$/;"	m	struct:element_struct2	file:
element_boiling_point	src/systems/chem.c	/^int element_boiling_point(chemdb_id chemdb, element_id element, double * ret) {$/;"	f
element_count	src/systems/chem.c	/^element_id element_count() {$/;"	f
element_data	include/typedefs.h	/^typedef struct element_struct element_data;$/;"	t	typeref:struct:element_struct
element_data2	include/typedefs.h	/^typedef struct element_struct2 element_data2;$/;"	t	typeref:struct:element_struct2
element_econfig	src/systems/chem.c	/^int element_econfig(client_index client, element_id element) {$/;"	f
element_econfig_order	src/systems/chem.c	/^const char * element_econfig_order() {$/;"	f
element_electron_affinity	src/systems/chem.c	/^int element_electron_affinity(chemdb_id chemdb, element_id element, double * ret) {$/;"	f
element_electronegativity	src/systems/chem.c	/^int element_electronegativity(chemdb_id chemdb, element_id element, double * ret) {$/;"	f
element_id	include/typedefs.h	/^typedef unsigned element_id;$/;"	t
element_ionization_energy	src/systems/chem.c	/^int element_ionization_energy(chemdb_id chemdb, element_id element, double * ret) {$/;"	f
element_melting_point	src/systems/chem.c	/^int element_melting_point(chemdb_id chemdb, element_id element, double * ret) {$/;"	f
element_molar_mass	src/systems/chem.c	/^int element_molar_mass(chemdb_id chemdb, element_id element, double * ret) {$/;"	f
element_name	src/systems/chem.c	/^char * element_name(element_id element) {$/;"	f
element_number	src/systems/chem.c	/^unsigned element_number(element_id element) {$/;"	f
element_struct	src/systems/chem.c	/^struct element_struct {$/;"	s	file:
element_struct2	src/systems/chem.c	/^struct element_struct2 {$/;"	s	file:
element_symbol	src/systems/chem.c	/^char * element_symbol(element_id element) {$/;"	f
elements	src/systems/chem.c	/^const element_data elements[] = {$/;"	v
execute	src/systems/calc.c	/^calc_status execute(client_index client, string_stream * ss, calc_value * v) {$/;"	f
fn	include/command/struct.h	/^            command_status (*fn)(client_index, string_stream *);$/;"	m	struct:command_struct::__anon1::__anon3
fn_calc_exec	src/command/calc.c	/^command_status fn_calc_exec(client_index client, string_stream * ss) {$/;"	f
fn_calc_help	src/command/calc.c	/^command_status fn_calc_help(client_index client, string_stream * ss) {$/;"	f
fn_chem_econfig_of	src/command/chem.c	/^command_status fn_chem_econfig_of(client_index client, string_stream * ss) {$/;"	f
fn_chem_econfig_order	src/command/chem.c	/^command_status fn_chem_econfig_order(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_boilingpoint	src/command/chem.c	/^command_status fn_chem_element_boilingpoint(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_database_list	src/command/chem.c	/^command_status fn_chem_element_database_list(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_database_select	src/command/chem.c	/^command_status fn_chem_element_database_select(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_database_selected	src/command/chem.c	/^command_status fn_chem_element_database_selected(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_electronaffinity	src/command/chem.c	/^command_status fn_chem_element_electronaffinity(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_electronegativity	src/command/chem.c	/^command_status fn_chem_element_electronegativity(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_ionizationenergy	src/command/chem.c	/^command_status fn_chem_element_ionizationenergy(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_list	src/command/chem.c	/^command_status fn_chem_element_list(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_meltingpoint	src/command/chem.c	/^command_status fn_chem_element_meltingpoint(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_molarmass	src/command/chem.c	/^command_status fn_chem_element_molarmass(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_name	src/command/chem.c	/^command_status fn_chem_element_name(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_number	src/command/chem.c	/^command_status fn_chem_element_number(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_statistics	src/command/chem.c	/^command_status fn_chem_element_statistics(client_index client, string_stream * ss) {$/;"	f
fn_chem_element_symbol	src/command/chem.c	/^command_status fn_chem_element_symbol(client_index client, string_stream * ss) {$/;"	f
fn_help	src/command/main.c	/^command_status fn_help(client_index client, string_stream * ss) {$/;"	f
help_brief	include/command/struct.h	/^            const char * help_brief;$/;"	m	struct:command_struct::__anon1::__anon3
help_detailed	include/command/struct.h	/^    const char * help_detailed;$/;"	m	struct:command_struct
help_eval	src/command/main.c	/^command_status help_eval(client_index client, const command * cmd, string_stream * ss, int indent) {$/;"	f
help_title	include/command/struct.h	/^            const char * help_title;$/;"	m	struct:command_struct::__anon1::__anon2
ionization_energy	src/systems/chem.c	/^    double ionization_energy;$/;"	m	struct:element_struct2	file:
listener_addr	src/socket.c	/^struct sockaddr_in * const listener_addr = poll_addrs;$/;"	v
listener_fd	src/socket.c	/^struct pollfd * const listener_fd = poll_fds;$/;"	v
main	src/main.c	/^int main() {$/;"	f
melting_point	src/systems/chem.c	/^    double melting_point;$/;"	m	struct:element_struct2	file:
molar_mass	src/systems/chem.c	/^    double molar_mass;$/;"	m	struct:element_struct2	file:
name	src/systems/chem.c	/^    char * name;$/;"	m	struct:chemdb_struct	file:
name	src/systems/chem.c	/^    char * name;$/;"	m	struct:element_struct	file:
next_count	include/command/struct.h	/^    int next_count;$/;"	m	struct:command_struct
nexts	include/command/struct.h	/^            const command ** nexts;$/;"	m	struct:command_struct::__anon1::__anon2
nullchar	src/command/struct.c	/^char nullchar = 0;$/;"	v
number	src/systems/chem.c	/^    unsigned number;$/;"	m	struct:element_struct	file:
offset	src/socket.c	/^    int offset;$/;"	m	struct:storage_buffer	file:
orbitals	src/systems/chem.c	/^const char * orbitals = "spdfghijklmnoqrtuvwxyzabceABCDEFGHIJKLMNOPQRSTUVWXYZ";$/;"	v
params	include/command/struct.h	/^            const char * params;$/;"	m	struct:command_struct::__anon1::__anon3
parse_chemdb	src/csstream.c	/^int parse_chemdb(char * word, chemdb_id * chemdb) {$/;"	f
parse_element	src/csstream.c	/^int parse_element(char * word, element_id * element) {$/;"	f
parse_float	src/csstream.c	/^int parse_float(char * word, float * ret) {$/;"	f
parse_unsigned	src/csstream.c	/^int parse_unsigned(char * word, unsigned * ret) {$/;"	f
poll_addrs	src/socket.c	/^struct sockaddr_in poll_addrs[POLL_COUNT + 1];$/;"	v	typeref:struct:sockaddr_in
poll_fds	src/socket.c	/^struct pollfd poll_fds[POLL_COUNT + 1];$/;"	v	typeref:struct:pollfd
print_boiling_point	src/command/chem.c	/^command_status print_boiling_point(client_index client, element_id element) {$/;"	f
print_electron_affinity	src/command/chem.c	/^command_status print_electron_affinity(client_index client, element_id element) {$/;"	f
print_electronegativity	src/command/chem.c	/^command_status print_electronegativity(client_index client, element_id element) {$/;"	f
print_ionization_energy	src/command/chem.c	/^command_status print_ionization_energy(client_index client, element_id element) {$/;"	f
print_melting_point	src/command/chem.c	/^command_status print_melting_point(client_index client, element_id element) {$/;"	f
print_molar_mass	src/command/chem.c	/^command_status print_molar_mass(client_index client, element_id element) {$/;"	f
print_statistics	src/command/chem.c	/^command_status print_statistics(client_index client, element_id element) {$/;"	f
ptable_db	src/systems/chem.c	/^element_data2 ptable_db[] = {$/;"	v
sfv	include/typedefs.h	/^typedef struct sfv_struct sfv;$/;"	t	typeref:struct:sfv_struct
socket_clear	src/socket.c	/^void socket_clear(client_index client) {$/;"	f
socket_delete	src/socket.c	/^void socket_delete(client_index client) {$/;"	f
socket_get_chemdb	src/socket.c	/^chemdb_id socket_get_chemdb(client_index client) {$/;"	f
socket_init	src/socket.c	/^void socket_init() {$/;"	f
socket_ip	src/socket.c	/^char * socket_ip(client_index client) {$/;"	f
socket_loop	src/socket.c	/^void socket_loop() {$/;"	f
socket_print	src/socket.c	/^void socket_print(client_index client, const char * format, ...) {$/;"	f
socket_println	src/socket.c	/^void socket_println(client_index client, const char * format, ...) {$/;"	f
socket_set_chemdb	src/socket.c	/^void socket_set_chemdb(client_index client, chemdb_id chemdb) {$/;"	f
sstream_hasdata	src/csstream.c	/^int sstream_hasdata(string_stream * ss) {$/;"	f
sstream_readchemdb	src/csstream.c	/^stream_status sstream_readchemdb(string_stream * ss, chemdb_id * ret) {$/;"	f
sstream_readelement	src/csstream.c	/^int sstream_readelement(string_stream * ss, element_id * ret) {$/;"	f
sstream_readeof	src/csstream.c	/^int sstream_readeof(string_stream * ss, char ** ret) {$/;"	f
sstream_readfloat	src/csstream.c	/^int sstream_readfloat(string_stream * ss, float * ret) {$/;"	f
sstream_readunsigned	src/csstream.c	/^int sstream_readunsigned(string_stream * ss, unsigned * ret) {$/;"	f
sstream_readword	src/csstream.c	/^int sstream_readword(string_stream * ss, char ** ret) {$/;"	f
storage_buffer	src/socket.c	/^struct storage_buffer {$/;"	s	file:
stream_status	include/typedefs.h	/^typedef enum stream_status_enum stream_status;$/;"	t	typeref:enum:stream_status_enum
stream_status_enum	include/csstream.h	/^enum stream_status_enum {$/;"	g
string_stream	include/typedefs.h	/^typedef char * string_stream;$/;"	t
symbol	src/systems/chem.c	/^    char * symbol;$/;"	m	struct:element_struct	file:
trig_abbrev	include/command/struct.h	/^    const char * trig_abbrev;$/;"	m	struct:command_struct
trigger	include/command/struct.h	/^    const char * trigger;$/;"	m	struct:command_struct
usage	include/command/struct.h	/^            const char * usage;$/;"	m	struct:command_struct::__anon1::__anon3
